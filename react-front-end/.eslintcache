[{"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\index.js":"1","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\App.js":"2","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\serviceWorker.js":"3","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Homepage\\Homepage.js":"4","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Navbar\\Navbar.js":"5","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question4.js":"6","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question3.js":"7","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question2.js":"8","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question1.js":"9","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section.js":"10","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\COLORS.js":"11","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Textfield\\Textfield.js":"12","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\section1.js":"13","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Card\\Card.js":"14","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Homepage\\utilities.js":"15","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section3\\section3.js":"16"},{"size":464,"mtime":1613820419313,"results":"17","hashOfConfig":"18"},{"size":1559,"mtime":1613820419294,"results":"19","hashOfConfig":"18"},{"size":5086,"mtime":1613820419314,"results":"20","hashOfConfig":"18"},{"size":8975,"mtime":1614526019523,"results":"21","hashOfConfig":"18"},{"size":1662,"mtime":1613820419298,"results":"22","hashOfConfig":"18"},{"size":3040,"mtime":1614532421160,"results":"23","hashOfConfig":"18"},{"size":3509,"mtime":1613820419303,"results":"24","hashOfConfig":"18"},{"size":13177,"mtime":1614521863727,"results":"25","hashOfConfig":"18"},{"size":2414,"mtime":1613820419302,"results":"26","hashOfConfig":"18"},{"size":6693,"mtime":1614953752457,"results":"27","hashOfConfig":"18"},{"size":163,"mtime":1613820419295,"results":"28","hashOfConfig":"18"},{"size":1831,"mtime":1613820419307,"results":"29","hashOfConfig":"18"},{"size":507,"mtime":1613820419304,"results":"30","hashOfConfig":"18"},{"size":2283,"mtime":1613820419296,"results":"31","hashOfConfig":"18"},{"size":27337,"mtime":1614226392841,"results":"32","hashOfConfig":"18"},{"size":134,"mtime":1614955647318,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1bx39qz",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\index.js",[],["71","72"],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\App.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\serviceWorker.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Homepage\\Homepage.js",["73","74","75","76"],"import React, {useEffect, useState, useRef} from 'react';\r\nimport Sections from \"../Sections/Section\";\r\nimport Modal from 'react-modal';\r\nimport * as Colors from \"../../COLORS\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n// OLD MODEL\r\n//import * as facemesh from \"@tensorflow-models/facemesh\";\r\n\r\n// NEW MODEL\r\nimport * as blazeface from \"@tensorflow-models/blazeface\";\r\nimport Webcam from \"react-webcam\";\r\nimport {drawMesh} from \"./utilities\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: \"500px\",\r\n        height: \"500px\",\r\n        backgroundColor: Colors.DARK_GREENISH,\r\n        borderRadius: \"20px\"\r\n    }\r\n\r\n};\r\n\r\n\r\nconst Homepage = () => {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n\r\n    const [modalIsOpen, setIsOpen] = React.useState(true);\r\n    const [isVerifyLoading, verify] = React.useState(true);\r\n    const [state, setState] = React.useState(false);\r\n\r\n    const statusOfHuman = sessionStorage.getItem('HumanIsVerified')\r\n    console.log(\"The Session is\", statusOfHuman)\r\n    const url = \"http://localhost:8000/success\";\r\n\r\n    const runFacemesh = async () => {\r\n        // OLD MODEL\r\n        // const net = await facemesh.load({\r\n        //   inputResolution: { width: 640, height: 480 },\r\n        //   scale: 0.8,\r\n        // });\r\n        // NEW MODEL\r\n        const model = await blazeface.load();\r\n        const returnTensors = false;\r\n        // const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\r\n        setInterval(() => {\r\n            return detect(model, returnTensors, 640, 480);\r\n        }, 10);\r\n    };\r\n\r\n    const detect = async (model, returnTensors, width, height) => {\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Set canvas width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n\r\n            // Make Detections\r\n            // OLD MODEL\r\n            //       const face = await net.estimateFaces(video);\r\n            // NEW MODEL\r\n            // const face = await net.estimateFaces({input: video});\r\n            // console.log(face);\r\n\r\n            const predictions = await model.estimateFaces(video, returnTensors);\r\n            console.log(predictions);\r\n\r\n            // Get canvas context\r\n            try {\r\n                const context = canvasRef.current.getContext(\"2d\");\r\n\r\n\r\n                // requestAnimationFrame(()=>{drawMesh(face, ctx)});\r\n                if (predictions.length > 0) {\r\n\r\n                    setState(true)\r\n                    /*\r\n                    `predictions` is an array of objects describing each detected face, for example:\r\n\r\n                    [\r\n                      {\r\n                        topLeft: [232.28, 145.26],\r\n                        bottomRight: [449.75, 308.36],\r\n                        probability: [0.998],\r\n                        landmarks: [\r\n                          [295.13, 177.64], // right eye\r\n                          [382.32, 175.56], // left eye\r\n                          [341.18, 205.03], // nose\r\n                          [345.12, 250.61], // mouth\r\n                          [252.76, 211.37], // right ear\r\n                          [431.20, 204.93] // left ear\r\n                        ]\r\n                      }\r\n                    ]\r\n                    */\r\n\r\n                    for (let i = 0; i < predictions.length; i++) {\r\n                        const start = predictions[i].topLeft;\r\n                        const end = predictions[i].bottomRight;\r\n                        var probability = predictions[i].probability;\r\n                        const size = [end[0] - start[0], end[1] - start[1]];\r\n                        // Render a rectangle over each detected face.\r\n                        context.beginPath();\r\n                        context.strokeStyle = \"green\";\r\n                        context.lineWidth = \"4\";\r\n                        context.rect(start[0], start[1], size[0], size[1]);\r\n                        context.stroke();\r\n                        var prob = (probability[0] * 100).toPrecision(5).toString();\r\n                        var text = prob + \"%\";\r\n                        context.fillStyle = \"red\";\r\n                        context.font = \"13pt sans-serif\";\r\n                        context.fillText(text, start[0] + 5, start[1] + 20);\r\n                    }\r\n                    sessionStorage.setItem('HumanIsVerified', true)\r\n                    setIsOpen(false);\r\n                }\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n            if (state === false) {\r\n                const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\r\n                    runFacemesh();\r\n\r\n\r\n                        clearInterval(intervalId);\r\n\r\n                }, 5000)\r\n            }\r\n\r\n\r\n            //This is important\r\n\r\n        },\r\n        [url, useState]\r\n    )\r\n\r\n\r\n    return (\r\n        <>\r\n            <Sections/>\r\n            <Modal\r\n                isOpen={modalIsOpen && !statusOfHuman}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\"\r\n            >\r\n\r\n                {/*<button onClick={closeModal}>close</button>*/}\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        fontFamily: \"'Montserrat', sans-serif\",\r\n                        fontSize: \"25px\",\r\n                        color: Colors.WHITE_ISH,\r\n                        flexDirection: \"row\"\r\n                    }}\r\n                >\r\n                    We Need To See If Your A Human\r\n\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        fontFamily: \"'Montserrat', sans-serif\",\r\n                        fontSize: \"25px\",\r\n                        color: Colors.WHITE_ISH,\r\n                        flexDirection: \"row\",\r\n                        marginTop: \"20px\"\r\n                    }}\r\n                >\r\n                    {/*<img style={{*/}\r\n                    {/*    borderRadius: \"15px\"*/}\r\n                    {/*}} src={'/stream'} className=\"App-logo\" alt=\"logo\"/>*/}\r\n                    <Webcam\r\n                        ref={webcamRef}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                            overflowY: \"hidden\",\r\n                            textAlign: \"center\",\r\n                            zIndex: 9,\r\n                            width: 400,\r\n                            height: 400,\r\n                        }}\r\n                    />\r\n                    <canvas\r\n                        ref={canvasRef}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            marginLeft: \"auto\",\r\n                            marginRight: \"auto\",\r\n                            left: 0,\r\n                            right: 0,\r\n                            overflowY: \"hidden\",\r\n                            textAlign: \"center\",\r\n                            zIndex: 9,\r\n                            width: 400,\r\n                            height: 400,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        fontFamily: \"'Montserrat', sans-serif\",\r\n                        fontSize: \"25px\",\r\n                        color: Colors.WHITE_ISH,\r\n                        flexDirection: \"row\",\r\n                        marginTop: \"30px\"\r\n                    }}\r\n                >\r\n                    {isVerifyLoading ? <CircularProgress style={{\r\n                        color: Colors.WHITE_ISH,\r\n                    }}/> : <></>\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Homepage;","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Navbar\\Navbar.js",["77"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport * as Colors from '../../COLORS';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{\r\n                backgroundColor: Colors.MEDIUM_GREENISH,\r\n                color: Colors.WHITE_ISH,\r\n            }}>\r\n                <Toolbar style={{\r\n                    // marginTop: \"-10px\",\r\n                    marginLeft: \"20px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    fontFamily: \"'Montserrat', sans-serif\",\r\n                    fontSize: \"20px\"\r\n                }}>\r\n\r\n                    <h3>\r\n                        Project Insights\r\n                    </h3>\r\n                    {/*<Button style={{*/}\r\n                    {/*  backgroundColor: Colors.WHITE_ISH,*/}\r\n                    {/*  color: Colors.DARK_GREENISH*/}\r\n                    {/*}}>Login</Button>*/}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question4.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question3.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question2.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question1.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section.js",["78","79","80"],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\COLORS.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Textfield\\Textfield.js",["81"],"import { colors } from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport * as Colors from \"../../COLORS\"\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: Colors.DARK_GREENISH,\r\n            fontSize: \"20px\",\r\n            marginTop: \"-10px\",\r\n            fontFamily: \"'Montserrat', sans-serif\",\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#1a508b',\r\n\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: '#1a508b',\r\n                fontSize: \"20px\",\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: '#1a508b',\r\n                color: \"#1a508b\",\r\n                fontSize: \"20px\",\r\n\r\n                fontFamily: \"'Montserrat', sans-serif\",\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#1a508b',\r\n                color: \"white\"\r\n            },\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            color: Colors.DARK_GREENISH,\r\n            fontSize: \"20px\",\r\n            fontFamily: \"'Montserrat', sans-serif !important\",\r\n        },\r\n        '& .MuiInput-input': {\r\n            color: Colors.DARK_GREENISH,\r\n            fontSize: \"20px\",\r\n            fontFamily: \"'Montserrat', sans-serif\",\r\n        },\r\n        '& .MuiFormLabel-root.Mui-disabled': {\r\n            color: Colors.DARK_GREENISH,\r\n            fontFamily: \"'Montserrat', sans-serif\",\r\n            fontSize: \"25px\",\r\n\r\n        },\r\n        '& .MuiInputLabel-root': {\r\n            color: Colors.DARK_GREENISH,\r\n            display: \"block\",\r\n            transformOrigin: \"top left\",\r\n        },\r\n\r\n    }\r\n\r\n})(TextField);\r\n\r\nexport default CssTextField;","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\section1.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Card\\Card.js",["82"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport * as Colors from \"../../COLORS\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        backgroundColor: Colors.LIGHT_GREENISH,\r\n        color: Colors.DARK_GREENISH,\r\n        margin: 10,\r\n        height: 410,\r\n        fontFamily: \"'Montserrat', sans-serif\",\r\n    },\r\n    media: {\r\n        height: 200,\r\n        // paddingTop: '56.25%', // 16:9\r\n        width: 375\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst CardView = (props) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavLink\r\n              to={props.question_link || \"question\"}\r\n              style={{\r\n                  textDecoration:\"none\"\r\n              }}\r\n            >\r\n\r\n            <Card className={classes.root}\r\n\r\n\r\n            >\r\n                <CardHeader\r\n\r\n                    title={props.question_no_and_text}\r\n                    // subheader=\"September 14, 2016\"\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.question_image}\r\n                />\r\n                <CardContent>\r\n                    <Typography component=\"h4\">\r\n                        {props.question_text}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            </NavLink>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardView;","C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Homepage\\utilities.js",[],"C:\\Users\\reube\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section3\\section3.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"91","line":13,"column":9,"nodeType":"89","messageId":"90","endLine":13,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":37,"column":29,"nodeType":"89","messageId":"90","endLine":37,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":160,"column":9,"nodeType":"95","endLine":160,"endColumn":24,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":18},{"ruleId":"87","severity":1,"message":"97","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":18},{"ruleId":"87","severity":1,"message":"98","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":11},{"ruleId":"87","severity":1,"message":"99","line":12,"column":8,"nodeType":"89","messageId":"90","endLine":12,"endColumn":15},{"ruleId":"87","severity":1,"message":"100","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":16},{"ruleId":"87","severity":1,"message":"101","line":45,"column":11,"nodeType":"89","messageId":"90","endLine":45,"endColumn":28},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'tf' is defined but never used.","Identifier","unusedVar","'drawMesh' is defined but never used.","'verify' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'runFacemesh' and 'state'. Either include them or remove the dependency array. Outer scope values like 'useState' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["104"],"'Typography' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'colors' is defined but never used.","'handleExpandClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [runFacemesh, state, url]",{"range":"107","text":"108"},[5697,5712],"[runFacemesh, state, url]"]