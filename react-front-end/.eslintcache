[{"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\index.js":"1","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\App.js":"2","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\serviceWorker.js":"3","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Homepage\\Homepage.js":"4","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Navbar\\Navbar.js":"5","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question1.js":"6","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question3.js":"7","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question2.js":"8","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question4.js":"9","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\COLORS.js":"10","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section.js":"11","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\section1.js":"12","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Card\\Card.js":"13"},{"size":464,"mtime":1613581528660,"results":"14","hashOfConfig":"15"},{"size":1559,"mtime":1613581528647,"results":"16","hashOfConfig":"15"},{"size":5086,"mtime":1613581528661,"results":"17","hashOfConfig":"15"},{"size":3931,"mtime":1613658062971,"results":"18","hashOfConfig":"15"},{"size":1662,"mtime":1613581528651,"results":"19","hashOfConfig":"15"},{"size":2414,"mtime":1613655050305,"results":"20","hashOfConfig":"15"},{"size":457,"mtime":1613581528654,"results":"21","hashOfConfig":"15"},{"size":2414,"mtime":1613668318842,"results":"22","hashOfConfig":"15"},{"size":457,"mtime":1613581528654,"results":"23","hashOfConfig":"15"},{"size":163,"mtime":1613581528648,"results":"24","hashOfConfig":"15"},{"size":6646,"mtime":1613581528652,"results":"25","hashOfConfig":"15"},{"size":507,"mtime":1613581528655,"results":"26","hashOfConfig":"15"},{"size":2283,"mtime":1613581528649,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1rq113v",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\index.js",[],["58","59"],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\App.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\serviceWorker.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Homepage\\Homepage.js",["60","61","62","63","64"],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Navbar\\Navbar.js",["65"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport * as Colors from '../../COLORS';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{\r\n                backgroundColor: Colors.MEDIUM_GREENISH,\r\n                color: Colors.WHITE_ISH,\r\n            }}>\r\n                <Toolbar style={{\r\n                    // marginTop: \"-10px\",\r\n                    marginLeft: \"20px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    fontFamily: \"'Montserrat', sans-serif\",\r\n                    fontSize: \"20px\"\r\n                }}>\r\n\r\n                    <h3>\r\n                        Project Insights\r\n                    </h3>\r\n                    {/*<Button style={{*/}\r\n                    {/*  backgroundColor: Colors.WHITE_ISH,*/}\r\n                    {/*  color: Colors.DARK_GREENISH*/}\r\n                    {/*}}>Login</Button>*/}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\nexport default NavBar;","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question1.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question3.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question2.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\Question\\question4.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\COLORS.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section.js",["66","67","68"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport * as Colors from \"../../COLORS\";\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Section1 from \"./Section1/section1\"\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <>\r\n                    {children}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nconst Sections = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{\r\n                backgroundColor: Colors.MEDIUM_GREENISH,\r\n                color: Colors.WHITE_ISH,\r\n\r\n            }}>\r\n\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"red\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                    style={{\r\n                        backgroundColor: Colors.DARK_GREENISH\r\n\r\n                    }}\r\n                >\r\n                    <Tab style={{\r\n                        padding: 0,\r\n                        fontFamily: \"'Montserrat', sans-serif\",\r\n                        fontSize: \"25px\",\r\n                        color: Colors.DARK_GREENISH,\r\n                        backgroundColor: Colors.WHITE_ISH,\r\n                        // border:\"1px solid\"+Colors.DARK_GREENISH\r\n                    }} label=\"Section 1\"  {...a11yProps(0)} >\r\n                        <PhoneIcon/>\r\n                    </Tab>\r\n                    <Tab style={{\r\n                        padding: 0,\r\n                        fontFamily: \"'Montserrat', sans-serif\",\r\n                        fontSize: \"25px\",\r\n                        color: Colors.DARK_GREENISH,\r\n                        backgroundColor: Colors.WHITE_ISH\r\n                    }} label=\"Section 2\" {...a11yProps(1)} />\r\n                    <Tab style={{\r\n                        padding: 0,\r\n                        fontFamily: \"'Montserrat', sans-serif\",\r\n                        fontSize: \"25px\",\r\n                        color: Colors.DARK_GREENISH,\r\n                        backgroundColor: Colors.WHITE_ISH\r\n                    }} label=\"Section 3\" {...a11yProps(2)} />\r\n\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        padding: 5,\r\n                        flexWrap: \"wrap\",\r\n                        margin: 10\r\n                    }}>\r\n                        <Section1\r\n                            question_no_and_text={\"Question 1\"}\r\n\r\n                            question_image={\"https://www.rapidformationsblog.co.uk/wp-content/uploads/2020/05/RF-Profit.jpg\"}\r\n\r\n                            question_text={\"Predict the most profitable product that the company must keep manufacturing\"}\r\n\r\n                            question_link={\"/section1/question1\"}\r\n                        />\r\n                        <Section1\r\n                            question_no_and_text={\"Question 2\"}\r\n\r\n                            question_image={\"https://cdn-images-1.medium.com/max/800/0*dvLU5DDWSnHdQqdC.jpg\"}\r\n\r\n                            question_text={\"Use Logistic regression to determine whether Hamburg is a good destination for\\n\" +\r\n                            \"exporting more than 100 units of any products.\"}\r\n                            question_link={\"/section1/question2\"}\r\n                        />\r\n                        <Section1\r\n                            question_no_and_text={\"Question 3\"}\r\n\r\n                            question_image={\"https://www.online-tech-tips.com/wp-content/uploads/2020/11/linear-regression-trendline.png\"}\r\n\r\n                            question_text={\"Implement linear regression for ‘Quantity’ vs ‘Unit rate in FC‘ .Analyze this model for overfitting and implement a solution using Ridge regression\"}\r\n                            question_link={\"/section1/question3\"}\r\n                        />\r\n                        <Section1\r\n                            question_no_and_text={\"Question 4\"}\r\n\r\n                            question_image={\"https://miro.medium.com/max/1280/1*xkuet4YVglp8KWsK90bfRw.gif\"}\r\n\r\n                            question_text={\"Classify the data given into 5 clusters.Analyze and determine the best attribute that can be used for clustering in the given dataset.\"}\r\n                            question_link={\"/section1/question4\"}\r\n                        />\r\n                    </div>\r\n\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    Item Two\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    Item Three\r\n                </TabPanel>\r\n\r\n            </SwipeableViews>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sections;","C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Sections\\Section1\\section1.js",[],"C:\\Users\\Reuben Coutinho\\PycharmProjects\\A-Study-On-The-Insights-Data-Set\\react-front-end\\src\\Components\\Card\\Card.js",["69"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport * as Colors from \"../../COLORS\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        backgroundColor: Colors.LIGHT_GREENISH,\r\n        color: Colors.DARK_GREENISH,\r\n        margin: 10,\r\n        height: 410,\r\n        fontFamily: \"'Montserrat', sans-serif\",\r\n    },\r\n    media: {\r\n        height: 200,\r\n        // paddingTop: '56.25%', // 16:9\r\n        width: 375\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst CardView = (props) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavLink\r\n              to={props.question_link || \"question\"}\r\n              style={{\r\n                  textDecoration:\"none\"\r\n              }}\r\n            >\r\n\r\n            <Card className={classes.root}\r\n\r\n\r\n            >\r\n                <CardHeader\r\n\r\n                    title={props.question_no_and_text}\r\n                    // subheader=\"September 14, 2016\"\r\n                />\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.question_image}\r\n                />\r\n                <CardContent>\r\n                    <Typography component=\"h4\">\r\n                        {props.question_text}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            </NavLink>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardView;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":26,"column":25,"nodeType":"76","messageId":"77","endLine":26,"endColumn":34},{"ruleId":"74","severity":1,"message":"78","line":27,"column":29,"nodeType":"76","messageId":"77","endLine":27,"endColumn":35},{"ruleId":"74","severity":1,"message":"79","line":28,"column":12,"nodeType":"76","messageId":"77","endLine":28,"endColumn":20},{"ruleId":"74","severity":1,"message":"80","line":28,"column":22,"nodeType":"76","messageId":"77","endLine":28,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":58,"column":9,"nodeType":"83","endLine":58,"endColumn":24,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"85","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":18},{"ruleId":"74","severity":1,"message":"85","line":8,"column":8,"nodeType":"76","messageId":"77","endLine":8,"endColumn":18},{"ruleId":"74","severity":1,"message":"86","line":9,"column":8,"nodeType":"76","messageId":"77","endLine":9,"endColumn":11},{"ruleId":"74","severity":1,"message":"87","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":15},{"ruleId":"74","severity":1,"message":"88","line":45,"column":11,"nodeType":"76","messageId":"77","endLine":45,"endColumn":28},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'setIsOpen' is assigned a value but never used.","Identifier","unusedVar","'verify' is assigned a value but never used.","'setState' is assigned a value but never used.","'State' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'statusOfHuman'. Either include it or remove the dependency array. Outer scope values like 'useState' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["91"],"'Typography' is defined but never used.","'Box' is defined but never used.","'Toolbar' is defined but never used.","'handleExpandClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [statusOfHuman, url]",{"range":"94","text":"95"},[1804,1819],"[statusOfHuman, url]"]